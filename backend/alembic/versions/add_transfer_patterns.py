"""Add transfer pattern learning system

Revision ID: add_transfer_patterns
Revises: 73c49299cbbe
Create Date: 2025-01-13 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'add_transfer_patterns'
down_revision = '73c49299cbbe'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transfer_patterns',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('pattern_name', sa.String(length=255), nullable=False),
    sa.Column('from_account_pattern', sa.String(length=255), nullable=True),
    sa.Column('to_account_pattern', sa.String(length=255), nullable=True),
    sa.Column('description_pattern', sa.String(length=255), nullable=True),
    sa.Column('amount_pattern', sa.String(length=100), nullable=True),
    sa.Column('typical_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('amount_tolerance', sa.Float(), nullable=True),
    sa.Column('max_days_between', sa.Integer(), nullable=True),
    sa.Column('confidence_threshold', sa.Float(), nullable=True),
    sa.Column('auto_confirm', sa.Boolean(), nullable=True),
    sa.Column('times_matched', sa.Integer(), nullable=True),
    sa.Column('last_matched', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_from_transfer_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['created_from_transfer_id'], ['transfers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Add index for user_id and is_active for performance
    op.create_index('idx_transfer_patterns_user_active', 'transfer_patterns', ['user_id', 'is_active'])
    
    # Add transfer_patterns relationship to users table
    # This is handled via SQLAlchemy relationship, no DB changes needed
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_transfer_patterns_user_active', table_name='transfer_patterns')
    op.drop_table('transfer_patterns')
    # ### end Alembic commands ###
